name: Build a new release

on:
  workflow_dispatch: {}
  push:
    tags:
      - '*'

env:
  REF_NAME: ${{ github.ref_name }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release tag
        run: echo "RELEASE_TAG=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build uberjar
        env:
          MVN_FLAGS: -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
          QUARKUS_PACKAGE_TYPE: uber-jar
        working-directory: ./src/demo-multiverse/
        run: ./mvnw $MVN_FLAGS package

      - name: Debug
        run: find .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Multiverse Demo ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false

      - name: Upload JAR
        id: upload-release-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./src/demo-multiverse/target/demo-multiverse-1.0.0-SNAPSHOT-runner.jar
          asset_name: demo-multiverse-1.0.0-SNAPSHOT-runner.jar
          asset_content_type: application/java-archive
